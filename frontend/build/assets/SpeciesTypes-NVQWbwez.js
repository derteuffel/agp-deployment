import{a6 as e}from"./index-BBwNWda_.js";const s=e.object({price:e.number({invalid_type_error:"Le prix doit être un nombre."}).min(0,{message:"Le prix doit être un nombre positif."}),id:e.string().uuid({message:"L'ID doit être un UUID valide."}),slug:e.string().nonempty({message:"Le slug est requis."}),referenceNumber:e.string().nonempty({message:"Le numéro de référence est requis."}),speciesName:e.string().nonempty({message:"Le nom de l'espèce est requis."}),speciesId:e.string().nonempty({message:"L'ID de l'espèce est requis."}),projectSiteName:e.string().nonempty({message:"Le nom du site de projet est requis."}),projectSiteId:e.string().nonempty({message:"L'ID du site de projet est requis."})}),r=e.object({name:e.string(),id:e.string().uuid(),slug:e.string(),referenceNumber:e.string(),typeName:e.string().nullable(),typeId:e.string().uuid().nullable(),unitName:e.string().nullable(),unitId:e.string().uuid().nullable(),prices:e.array(s)}),n=e.object({price:e.number({invalid_type_error:"Le prix est requis"}).min(0,"Le prix doit être un nombre positif"),projectSite:e.string().uuid("Le tronçon est requis"),species:e.string().uuid("L'espèce est requise")}),i=e.object({name:e.string().min(1,"Le nom est requis"),type:e.string().uuid("Le type d'actif est requis"),unit:e.string().uuid("L'unité de mesure est requise")}),u=e.object({name:e.string().min(1,"Le nom est requis")});e.object({id:e.string().uuid(),data:i.extend({unit:e.string().uuid("L'unité de mesure est requise").optional()})});e.object({id:e.string(),reason:e.string()});export{i as C,s as P,r as S,u as a,n as b};
